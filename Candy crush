import random

def create_board(size):
    colors = ['R', 'G', 'B', 'Y', 'P']
    return [[random.choice(colors) for _ in range(size)] for _ in range(size)]

def print_board(board):
    for row in board:
        print(' '.join(row))
    print()

def swap(board, x1, y1, x2, y2):
    board[x1][y1], board[x2][y2] = board[x2][y2], board[x1][y1]

def check_matches(board):
    size = len(board)
    to_remove = set()
    for i in range(size):
        for j in range(size - 2):
            if board[i][j] == board[i][j+1] == board[i][j+2]:
                to_remove.update([(i, j), (i, j+1), (i, j+2)])
            if board[j][i] == board[j+1][i] == board[j+2][i]:
                to_remove.update([(j, i), (j+1, i), (j+2, i)])
    return to_remove

def remove_and_refill(board, matches):
    size = len(board)
    for x, y in matches:
        for i in range(x, 0, -1):
            board[i][y] = board[i-1][y]
        board[0][y] = random.choice(['R', 'G', 'B', 'Y', 'P'])

def play_candy_crush():
    size = 5
    board = create_board(size)
    print_board(board)
    
    while True:
        x1, y1, x2, y2 = map(int, input("Enter coordinates to swap (x1 y1 x2 y2): ").split())
        swap(board, x1, y1, x2, y2)
        matches = check_matches(board)
        if matches:
            remove_and_refill(board, matches)
            print_board(board)
        else:
            print("No matches found. Try again.")
            swap(board, x1, y1, x2, y2)

play_candy_crush()
